// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int       @id @default(autoincrement())
  email      String
  employeeId String
  name       String?
  password   String
  role       Int
  user_avt   String    @default("https://res.cloudinary.com/dig0nsb6m/image/upload/v1704869331/hjv353yrt9hahuomkxey.png")
  isBan      Boolean   @default(false)
  banUntil   DateTime?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  isDelete   Boolean   @default(false)
  Postion    Position  @relation(fields: [role], references: [id])

  Feedback Feedback[]
}

model Position {
  id   Int    @id @default(autoincrement())
  name String
  User User[]
}

model VerifyCode {
  id        Int      @id @default(autoincrement())
  email     String
  code      Int
  createdAt DateTime @default(now())
}

model Feedback {
  id          Int      @id @default(autoincrement())
  description String
  time        Int?
  createdAt   DateTime @default(now())

  User   User @relation(fields: [userId], references: [id])
  userId Int
}

model Deparment {
  id            Int    @id @default(autoincrement())
  deparmentName String
  rooms         Room[]
}

model Room {
  id          Int       @id @default(autoincrement())
  roomName    String
  deparmentId Int
  createAt    DateTime  @default(now())
  deparment   Deparment @relation(fields: [deparmentId], references: [id], onDelete: Cascade)
  Device      Device[]
}

model Device {
  id                  Int       @id @default(autoincrement())
  name                String
  serialNumber        String
  manufacturer        String
  purchaseDate        DateTime
  expirationDate      DateTime
  price               Decimal
  qrCode              String?
  image               String
  lastMaintenanceDate DateTime?
  statusDevice        String    @default("INACTIVE")
  categoryId          Int
  roomId              Int?
  isDelete            Boolean   @default(false)
  room                Room?     @relation(fields: [roomId], references: [id])
  category            Category  @relation(fields: [categoryId], references: [id])

  @@map("device")
}

// model UsageInformation {
//   id          Int       @id @default(autoincrement())
//   deviceId    Int
//   usage_start DateTime  @default(now())
//   usage_end   DateTime?
//   end         DateTime?
//   purpose     String?
//   isHidden    Boolean   @default(false)
//   Device      Device    @relation(fields: [deviceId], references: [id])
// }

model Category {
  id           Int      @id @default(autoincrement())
  categoryName String
  devices      Device[]

  CategoryAttribyutes CategoryAttribyutes[]

  @@map("category")
}

model Attribyutes_category {
  id                  Int                   @id @default(autoincrement())
  name                String
  CategoryAttribyutes CategoryAttribyutes[]

  @@map("attribyutes_category")
}

model CategoryAttribyutes {
  categoryId   Int
  attribyuteId Int

  category   Category             @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  attribyute Attribyutes_category @relation(fields: [attribyuteId], references: [id], onDelete: Cascade)

  @@id([categoryId, attribyuteId])
  @@map("category_attribyutes")
}
